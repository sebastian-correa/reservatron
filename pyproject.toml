[project]
name = "reservatron"
version = "0.1.0"
description = "A tool to help you make reservations through different channels."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Sebastian Correa", "email" = "43179146+sebastian-correa@users.noreply.github.com" },
]
dependencies = [
    "requests>=2.32.3",
]

[project.scripts]
reservatron = "reservatron.cli:main"

[tool.uv]
dev-dependencies = [
    "detect-secrets>=1.5.0",
    "docstr-coverage>=2.3.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.5",
]


[tool.pytest.ini_options]
# Adding the current directory to the Python path so that pytest can find the modules to test. See https://docs.pytest.org/en/7.1.x/reference/reference.html#confval-pythonpath
pythonpath = "."
testpaths = ["tests"]

[tool.coverage.report]
exclude_also = [ # From https://coverage.readthedocs.io/en/7.6.1/config.html
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = ["**/tests/*", "*/__init__.py", ".venv/*"]

include_namespace_packages = "true"

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = [".venv"]

[tool.ruff.lint]
select = ["ALL"]

extend-ignore = [
    "G004",   # Don't allow f-string in log calls.
    "ISC001", # Implicitly concatenated string literals on one line might conflict with format.
    "B905",   # `zip()` without an explicit `strict=` parameter
    "CPY",    # Ensure all files have a copyright notice.
    "ANN401", # Sometimes we need Any.
    "D106",   # Missing docstring in public nested class
    "D107",   # We document `__init__` in the class itself.
    "COM812", # Conflict with formatting: missing trailing comma.
]


[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
    "INP001", # INP001 - Implicit namespace packages are allowed in tests.
    "S101",   # S101 - Checks for uses of the assert keyword. - necessary for testing.
    "B018",   # B018 - Found useless expression - necessary for testing exceptions are raised.
    "D100",   # D100 - Module dostrings not required in test files.
    "D104",   # D104 - Package dostrings not required in test files.
    "ARG",    # ARG - Unused args are common in tests with mock patches and mock functions.
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
